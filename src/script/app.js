(()=>{"use strict";const t=async(t,e,n)=>{const o={method:e,headers:{"Content-Type":"application/json"},credentials:"include"};n&&(o.body=JSON.stringify(n));try{const e=await fetch(`https://naturist.herokuapp.com${t}`,o);return await e.json()}catch(t){console.log(t)}};class e{constructor(){this.bg=document.querySelector(".bg")}showSpinner(){this.bg.classList.remove("hidden")}hideSpinner(){this.bg.classList.add("hidden")}}class n{constructor(){this.loginBtn=document.querySelector(".login-btn")}getLoginInputs(){return{email:document.getElementById("email").value,password:document.getElementById("password").value}}updateUI(){const t=document.querySelector(".login-btn-text"),e=document.querySelector(".loader");t.classList.add("hidden"),e.classList.remove("hidden")}defaultUI(){const t=document.querySelector(".login-btn-text"),e=document.querySelector(".loader");t.classList.remove("hidden"),e.classList.add("hidden")}resetInput(){document.getElementById("password").value=""}}class o{constructor(){}showPopup(t){const e=document.querySelector(".popup");e.textContent=t,e.style.display="block",e.style.opacity="1"}hidePopup(){setTimeout((()=>{const t=document.querySelector(".popup");t.style.display="none",t.style.opacity="0"}),3e3)}}class s{constructor(){this.signupbtn=document.querySelector(".signup-btn")}getInputs(){return{email:document.getElementById("email").value,password:document.getElementById("password").value,confirmPassword:document.getElementById("confirm-password").value,name:document.getElementById("name").value}}resetInput(){document.getElementById("password").value="",document.getElementById("confirm-password").value=""}updateUI(){const t=document.querySelector(".signup-btn-text"),e=document.querySelector(".loader");t.classList.add("hidden"),e.classList.remove("hidden")}defaultUI(){const t=document.querySelector(".signup-btn-text"),e=document.querySelector(".loader");t.classList.remove("hidden"),e.classList.add("hidden")}}class a{constructor(){this.tourContainer=document.querySelector(".tour-container")}generateMarkup(t){const e=` <div class="tour">\n    <div class="tour-header">\n      <span class="image-overlay"></span>\n      <img src="./src/img/biking.jpg" alt="" class="tour-img">\n    </div>\n    <div class="tour-content">\n      <p class="tour-title">${t.name}</p>\n      <p class="tour-content-fact">${t.difficulty.toUpperCase()} ${t.tourLength} Days </p>\n      <p class="tour-content-info">${t.info}\n      </p>\n      <div class="tour-icons">\n        <div class="tour-content-icon">\n          <i class="far fa-map"></i>\n          <p>${t.location}</p>\n        </div>\n        <div class="tour-content-icon">\n          <i class="far fa-calendar"></i>\n          <p>June 2022</p>\n        </div>\n        <div class="tour-content-icon">\n          <i class="far fa-user"></i>\n          <p>${t.groupSize}</p>\n        </div>\n        <div class="tour-content-icon">\n          <i class="far fa-hourglass"></i>\n          <p>${t.tourLength}</p>\n        </div>\n      </div>\n    </div>\n    <div class="tour-footer">\n      <div class="tour-ratings">\n        <p class="tour-price">$${t.price} <span>per person</span></p>\n        <div class="tour-rating">${t.averageRatings} <span>rating (${t.totalRatings})</span></div>\n      </div>\n      <div class="tour-btn">\n        <a href="/tour-detail/?id=${t._id}" class="tour-link">Details</a>\n      </div>\n    </div>\n  </div>`;this.tourContainer.insertAdjacentHTML("afterbegin",e)}}const i=new e,c=new class{constructor(){this.navBarList=document.querySelector(".list")}updateUI(t){const e=document.querySelector(".user-not-loggedin"),n=document.querySelector(".user-loggedin");document.querySelector(".user-name").innerText=`Welcome, ${t.data.user.name.split(" ")[0]}`,e.classList.add("hidden"),n.classList.remove("hidden")}defaultUI(){const t=document.querySelector(".user-not-loggedin"),e=document.querySelector(".user-loggedin");t.classList.remove("hidden"),e.classList.add("hidden")}getlogoutBtn(){const t=document.querySelector(".logout-btn");if(t)return t}},r=new o,d=new e,u=new o,l=async e=>{try{const n=e.getLoginInputs();e.updateUI();const o=await t("/api/user/login","POST",n);"Fail"===o.status?(e.defaultUI(),e.resetInput(),u.showPopup(o.message),u.hidePopup()):(e.defaultUI(),window.location.href="/")}catch(t){console.log(t)}},p=async e=>{try{d.showSpinner(),await t("/api/user/logout","GET"),e.defaultUI(),window.location.href="/",d.hideSpinner()}catch(t){console.log(t)}},m=async e=>{e.updateUI();const n=e.getInputs(),o=await t("/api/user/signup","POST",n);o.data?u.showPopup(o.data.message):u.showPopup(o.message),e.resetInput(),u.hidePopup(),e.defaultUI()},g=async e=>{(await t("/api/tour","GET")).data.tours.forEach((t=>{e.generateMarkup(t)}))};(async()=>{try{(async(e,o,d,u)=>{if(i.showSpinner(),"/activate-account.html"===window.location.pathname){const e=window.location.search.split("=")[1],n=await t(`/api/user/activate-account?verify=${e}`,"GET");"success"===n.status?window.location.href="/login.html?activated=true":document.write(n.message)}else i.showSpinner();if("/login.html"===window.location.pathname&&"?activated=true"===window.location.search&&setTimeout((()=>{r.showPopup("Account verified"),r.hidePopup()}),500),"/tours.html"==window.location.pathname){const t=new a;await e(t)}if("/login.html"==window.location.pathname){const t=new n;t.loginBtn.addEventListener("click",(function(){d(t)}))}if("/signup.html"==window.location.pathname){const t=new s;t.signupbtn.addEventListener("click",(function(){o(t)}))}c.getlogoutBtn()&&c.getlogoutBtn().addEventListener("click",(function(){u(c)}))})(g,m,l,p),await(async()=>{try{const e=await t("/api/user/about-me","GET");"success"===e.status&&c.updateUI(e),i.hideSpinner()}catch(t){console.log(t)}})()}catch(t){console.log(t)}})()})();