(()=>{"use strict";class e{constructor(){this.resetBtn=document.querySelector(".forgot-btn")}getInput(){return{email:document.getElementById("email").value}}updateUI(){const e=document.querySelector(".forgot-btn"),t=document.querySelector(".loader");e.classList.add("hidden"),t.classList.remove("hidden")}defaultUI(){const e=document.querySelector(".forgot-btn"),t=document.querySelector(".loader");e.classList.remove("hidden"),t.classList.add("hidden")}}const t=async(e,t,n)=>{const o={method:t,credentials:"include",headers:{"Content-Type":"application/json"}};n&&(o.body=JSON.stringify(n));try{const t=await fetch(`http://localhost:9090${e}`,o);return await t.json()}catch(e){console.log(e)}};class n{constructor(){}showPopup(e){const t=document.querySelector(".popup");t.textContent=e,t.style.display="block",t.style.opacity="1"}hidePopup(){setTimeout((()=>{const e=document.querySelector(".popup");e.style.display="none",e.style.opacity="0"}),3e3)}}class o{constructor(){this.bg=document.querySelector(".bg")}showSpinner(){this.bg.classList.remove("hidden")}hideSpinner(){this.bg.classList.add("hidden")}}const s=new n;class a{constructor(){this.resetBtn=document.querySelector(".reset-btn")}getInput(){const e=document.querySelector("[name='new-password']").value,t=document.querySelector("[name='confirm-new-password']").value;return{password:e.toString(),confirmPassword:t.toString()}}updateUI(){const e=document.querySelector(".reset-btn-text"),t=document.querySelector(".loader");e.classList.add("hidden"),t.classList.remove("hidden")}defaultUI(){const e=document.querySelector(".reset-btn-text"),t=document.querySelector(".loader");e.classList.remove("hidden"),t.classList.add("hidden")}}const i=new o,r=new n,c=async e=>{try{await t("/api/user/logout","GET"),e.defaultUI(),window.sessionStorage.setItem("isUserLoggedIn",!1),window.sessionStorage.setItem("user",!1),window.location.href="/",i.hideSpinner()}catch(e){console.log(e)}},d=new o;class u{constructor(){this.navBarList=document.querySelector(".list")}updateUI(e){const t=document.querySelector(".user-not-loggedin"),n=document.querySelector(".user-loggedin");document.querySelector(".user-name").innerText=`Welcome, ${e.data.user.name.split(" ")[0]}`,t.classList.add("hidden"),n.classList.remove("hidden"),d.hideSpinner()}defaultUI(){const e=document.querySelector(".user-not-loggedin"),t=document.querySelector(".user-loggedin");e.classList.remove("hidden"),t.classList.add("hidden")}getlogoutBtn(){const e=document.querySelector(".logout-btn");if(e)return e}}const l=new n,p=async(e,n)=>{const o=await t(`/api/user/reset-password?token=${n}`,"POST",e);if("Fail"===o.status)l.showPopup(o.message),l.hidePopup(),resetPasswordView.defaultUI();else{l.showPopup(o.message),l.hidePopup();const e=new u;setTimeout((async()=>{await c(e)}),2e3),resetPasswordView.defaultUI()}};class w{constructor(){this.passwordSaveBtn=document.querySelector(".password-save-btn"),this.loader=document.querySelector(".loader"),this.passwordText=document.querySelector(".password-save-text")}setInput(e){document.getElementById("account-name").value=e.data.user.name,document.getElementById("account-email").value=e.data.user.email}notLoggedIn(){window.location.href="/login.html?notLoggedIn=true"}getChangePasswordInput(){return{currentPassword:document.getElementById("current-password").value,newPassword:document.getElementById("new-password").value,confirmNewPassword:document.getElementById("confirm-new-password").value}}resetInput(){document.getElementById("current-password").value="",document.getElementById("new-password").value="",document.getElementById("confirm-new-password").value=""}updateUI(){this.passwordText.classList.add("hidden"),this.loader.classList.remove("hidden")}defaultUI(){this.passwordText.classList.remove("hidden"),this.loader.classList.add("hidden")}getLogoutBtn(){return document.querySelector(".log-out-btn")}}const m=new u,h=new o;let g=!1;class y{constructor(){this.loginBtn=document.querySelector(".login-btn")}getLoginInputs(){return{email:document.getElementById("email").value,password:document.getElementById("password").value}}updateUI(){const e=document.querySelector(".login-btn-text"),t=document.querySelector(".loader");e.classList.add("hidden"),t.classList.remove("hidden")}defaultUI(){const e=document.querySelector(".login-btn-text"),t=document.querySelector(".loader");e.classList.remove("hidden"),t.classList.add("hidden")}resetInput(){document.getElementById("password").value=""}disableLoginBtn(){this.loginBtn.disabled=!0}}const f=new n,v=new o;new o;class S{constructor(){this.tourContainer=document.querySelector(".tour-container")}generateMarkup(e){const t=` <div class="tour">\n    <div class="tour-header">\n      <span class="image-overlay"></span>\n      <img src="./src/img/biking.jpg" alt="" class="tour-img">\n    </div>\n    <div class="tour-content">\n      <p class="tour-title">${e.name}</p>\n      <p class="tour-content-fact">${e.difficulty.toUpperCase()} ${e.tourLength} Days </p>\n      <p class="tour-content-info">${e.info}\n      </p>\n      <div class="tour-icons">\n        <div class="tour-content-icon">\n          <i class="far fa-map"></i>\n          <p>${e.location}</p>\n        </div>\n        <div class="tour-content-icon">\n          <i class="far fa-calendar"></i>\n          <p>June 2022</p>\n        </div>\n        <div class="tour-content-icon">\n          <i class="far fa-user"></i>\n          <p>${e.groupSize}</p>\n        </div>\n        <div class="tour-content-icon">\n          <i class="far fa-hourglass"></i>\n          <p>${e.tourLength}</p>\n        </div>\n      </div>\n    </div>\n    <div class="tour-footer">\n      <div class="tour-ratings">\n        <p class="tour-price">$${e.price} <span>per person</span></p>\n        <div class="tour-rating">${e.averageRatings} <span>rating (${e.totalRatings})</span></div>\n      </div>\n      <div class="tour-btn">\n        <a href="/tour-detail/?id=${e._id}" class="tour-link">Details</a>\n      </div>\n    </div>\n  </div>`;this.tourContainer.insertAdjacentHTML("afterbegin",t)}}const I=new o;(async()=>{try{I.showSpinner(),await(async()=>{try{const e=await t("/api/user/about-me","GET");"success"===e.status&&(m.updateUI(e),g=!0),h.hideSpinner()}catch(e){console.log(e)}})(),(async()=>{if("/tours.html"==window.location.pathname){const e=new o,n=new S;(await t("/api/tour","GET")).data.tours.forEach((e=>{n.generateMarkup(e)})),e.hideSpinner()}})(),(async()=>{if("/forgot-password.html"==window.location.pathname){const n=new o,a=new e;a.resetBtn.addEventListener("click",(async function(){a.updateUI();const e=a.getInput();await(async e=>{const n=await t("/api/user/forgot-password","POST",e);n.status,s.showPopup(n.message),s.hidePopup()})(e),a.defaultUI()})),n.hideSpinner()}})(),(()=>{if("/reset-password.html"===window.location.pathname){const e=new o,t=window.location.search.split("=")[1];if(!t)return window.location.href="/";const n=new a;n.resetBtn.addEventListener("click",(async function(){n.updateUI();const e=n.getInput();if(e.password!==e.confirmPassword)return l.showPopup("Passwords do not match"),l.hidePopup(),void n.defaultUI();await p(e,t)})),e.hideSpinner()}})(),(()=>{if("/dashboard.html"==window.location.pathname){if(!g)return window.location.href="/login.html?notLoggedIn=true";const e=new o,s=new w,a=new u;s.getLogoutBtn().addEventListener("click",(function(){e.showSpinner(),c(a)})),s.passwordSaveBtn.addEventListener("click",(async function(e){e.preventDefault(),s.updateUI();const o=s.getChangePasswordInput();await(async e=>{const o=await t("/api/user/update-me/password","POST",e),s=new n;s.showPopup(o.message),s.hidePopup()})(o),s.defaultUI()})),e.hideSpinner()}})(),(()=>{if("/login.html"===window.location.pathname&&"?activated=true"===window.location.search&&setTimeout((()=>{f.showPopup("Account verified"),f.hidePopup()}),500),"/login.html"==window.location.pathname){v.showSpinner();const e=new y;e.loginBtn.addEventListener("click",(function(){(async e=>{try{e.updateUI();const n=e.getLoginInputs(),o=await t("/api/user/login","POST",n);if("Fail"===o.status)e.defaultUI(),e.resetInput(),r.showPopup(o.message),r.hidePopup();else{const n=await t("/api/user/about-me","GET");window.sessionStorage.setItem("user",JSON.stringify(n)),window.sessionStorage.setItem("isUserLoggedIn",!0),e.defaultUI(),window.location.href="/"}}catch(e){console.log(e)}})(e)})),v.hideSpinner()}"/login.html"==window.location.pathname&&"?notLoggedIn=true"===window.location.search&&setTimeout((()=>{f.showPopup("You are not logged in! Please log in."),f.hidePopup()}),500)})(),(async()=>{if("/activate-account.html"===window.location.pathname){const e=window.location.search.split("=")[1];if(!e)return window.location.href="/";const n=await t(`/api/user/activate-account?verify=${e}`,"GET");"success"===n.status?window.location.href="/login.html?activated=true":document.write(n.message)}})(),I.hideSpinner()}catch(e){console.log(e)}})()})();