(()=>{"use strict";const t=async(t,e,n)=>{const o={method:e,headers:{"Content-Type":"application/json"},credentials:"include"};n&&(o.body=JSON.stringify(n));try{const e=await fetch(`https://naturist.herokuapp.com${t}`,o);return await e.json()}catch(t){console.log(t)}};class e{constructor(){this.tourContainer=document.querySelector(".tour-container")}generateMarkup(t){const e=Math.round(t.averageRatings),n=`<div class="tour">\n      <div class="tour-left">\n        <img class="tour-img" src="./src/img/img.jpg" alt="" />\n        <span class="tour-img-gradient"></span>\n      </div>\n      <div class="tour-right">\n        <div class="tour-ratings">\n          <div class="tour-stars">\n            (${t.totalRatings})\n          </div>\n          <p class="tour-price"><span class="dollar">$</span>${t.price}</p>\n        </div>\n        <p class="tour-title">${t.name}</p>\n        <div class="tour-info">\n          <div class="tour-info-box tour-info-location">\n            <i class="far fa-flag"></i>\n            <p>${t.location}</p>\n          </div>\n          <div class="tour-info-box tour-info-groupSize">\n            <i class="far fa-user"></i>\n            <p>${t.groupSize}</p>\n          </div>\n          <div class="tour-info-box tour-info-date">\n            <i class="far fa-calendar-alt"></i>\n            <p>${new Date(t.dates[0]).getFullYear()}, ${new Date(t.dates[0]).getUTCMonth()}</p>\n          </div>\n          <div class="tour-info-box tour-info-duration">\n            <i class="far fa-hourglass"></i>\n            <p>${t.difficulty}</p>\n          </div>\n        </div>\n        <p class="tour-description">\n          ${t.info}\n        </p>\n        <div class="tour-btn">\n          <a href="#" class="tour-link">Details</a>\n        </div>\n      </div>\n    </div>`;this.tourContainer.insertAdjacentHTML("afterbegin",n);const o=document.querySelector(".tour-stars");for(let t=0;t<e;t++)o.insertAdjacentHTML("afterbegin",'<i class="far fa-star"></i>');return n}}const n=new class{constructor(){this.loginBtn=document.querySelector(".login-btn")}getLoginInputs(){return{email:document.getElementById("email").value,password:document.getElementById("password").value}}updateUI(){const t=document.querySelector(".login-btn-text"),e=document.querySelector(".loader");t.classList.add("hidden"),e.classList.remove("hidden")}defaultUI(){const t=document.querySelector(".login-btn-text"),e=document.querySelector(".loader");t.classList.remove("hidden"),e.classList.add("hidden")}},o=new class{constructor(){this.navBarList=document.querySelector(".list")}updateUI(t){const e=document.querySelector(".user-not-loggedin"),n=document.querySelector(".user-loggedin");document.querySelector(".user-name").innerText=`Welcome, ${t.data.user.name.split(" ")[0]}`,e.classList.add("hidden"),n.classList.remove("hidden")}defaultUI(){const t=document.querySelector(".user-not-loggedin"),e=document.querySelector(".user-loggedin");t.classList.remove("hidden"),e.classList.add("hidden")}getlogoutBtn(){const t=document.querySelector(".logout-btn");if(t)return t}},s=new class{constructor(){this.bg=document.querySelector(".bg")}showSpinner(){this.bg.classList.remove("hidden")}hideSpinner(){this.bg.classList.add("hidden")}},a=async()=>{try{const e=n.getLoginInputs();n.updateUI(),"Fail"===(await t("/api/user/login","POST",e)).status&&n.defaultUI(),n.defaultUI(),window.location.href="/"}catch(t){console.log(t)}},i=async()=>{console.log("logging out");try{s.showSpinner(),await t("/api/user/logout","GET"),o.defaultUI(),window.location.href="/",s.hideSpinner()}catch(t){console.log(t)}};(async()=>{try{s.showSpinner(),n.loginBtn&&n.loginBtn.addEventListener("click",a),await(async()=>{try{const e=await t("/api/user/about-me","GET");"success"===e.status&&(o.updateUI(e),s.hideSpinner()),s.hideSpinner()}catch(t){console.log(t)}})(),"/tours.html"==window.location.pathname&&await(async()=>{const n=await t("/api/tour","GET"),o=new e;n.data.tours.forEach((t=>{o.generateMarkup(t)}))})(),o.getlogoutBtn().addEventListener("click",i)}catch(t){console.log(t)}})()})();