(()=>{"use strict";const e=async(e,t,n)=>{const o={method:t,headers:{"Content-Type":"application/json"},credentials:"include"};n&&(o.body=JSON.stringify(n));try{const t=await fetch(`https://naturist.herokuapp.com${e}`,o);return await t.json()}catch(e){console.log(e)}};class t{constructor(){this.bg=document.querySelector(".bg")}showSpinner(){this.bg.classList.remove("hidden")}hideSpinner(){this.bg.classList.add("hidden")}}class n{constructor(){this.loginBtn=document.querySelector(".login-btn")}getLoginInputs(){return{email:document.getElementById("email").value,password:document.getElementById("password").value}}updateUI(){const e=document.querySelector(".login-btn-text"),t=document.querySelector(".loader");e.classList.add("hidden"),t.classList.remove("hidden")}defaultUI(){const e=document.querySelector(".login-btn-text"),t=document.querySelector(".loader");e.classList.remove("hidden"),t.classList.add("hidden")}resetInput(){document.getElementById("password").value=""}}class o{constructor(){this.navBarList=document.querySelector(".list")}updateUI(e){const t=document.querySelector(".user-not-loggedin"),n=document.querySelector(".user-loggedin");document.querySelector(".user-name").innerText=`Welcome, ${e.data.user.name.split(" ")[0]}`,t.classList.add("hidden"),n.classList.remove("hidden")}defaultUI(){const e=document.querySelector(".user-not-loggedin"),t=document.querySelector(".user-loggedin");e.classList.remove("hidden"),t.classList.add("hidden")}getlogoutBtn(){const e=document.querySelector(".logout-btn");if(e)return e}}class s{constructor(){}showPopup(e){const t=document.querySelector(".popup");t.textContent=e,t.style.display="block",t.style.opacity="1"}hidePopup(){setTimeout((()=>{const e=document.querySelector(".popup");e.style.display="none",e.style.opacity="0"}),3e3)}}const a=new t,c=(new n,new o),i=new s,r=new o,d=new class{constructor(){this.signupbtn=document.querySelector(".signup-btn")}getInputs(){return{email:document.getElementById("email").value,password:document.getElementById("password").value,confirmPassword:document.getElementById("confirm-password").value,name:document.getElementById("name").value}}resetInput(){document.getElementById("password").value="",document.getElementById("confirm-password").value=""}updateUI(){const e=document.querySelector(".signup-btn-text"),t=document.querySelector(".loader");e.classList.add("hidden"),t.classList.remove("hidden")}defaultUI(){const e=document.querySelector(".signup-btn-text"),t=document.querySelector(".loader");e.classList.remove("hidden"),t.classList.add("hidden")}},l=new t,u=new s,p=async e=>{try{const t=e.getLoginInputs();e.updateUI();const n=await callAPI("/api/user/login","POST",t);"Fail"===n.status?(e.defaultUI(),e.resetInput(),u.showPopup(n.message),u.hidePopup()):(e.defaultUI(),window.location.href="/")}catch(e){console.log(e)}},g=async()=>{console.log("logging out");try{l.showSpinner(),await callAPI("/api/user/logout","GET"),r.defaultUI(),window.location.href="/",l.hideSpinner()}catch(e){console.log(e)}},m=async()=>{d.updateUI();const e=d.getInputs(),t=await callAPI("/api/user/signup","POST",e);t.data?u.showPopup(t.data.message):u.showPopup(t.message),d.resetInput(),u.hidePopup(),d.defaultUI()},h=new class{constructor(){this.tourContainer=document.querySelector(".tour-container")}generateMarkup(e){const t=` <div class="tour">\n    <div class="tour-header">\n      <span class="image-overlay"></span>\n      <img src="./src/img/biking.jpg" alt="" class="tour-img">\n    </div>\n    <div class="tour-content">\n      <p class="tour-title">${e.name}</p>\n      <p class="tour-content-fact">${e.difficulty.toUpperCase()} ${e.tourLength} Days </p>\n      <p class="tour-content-info">${e.info}\n      </p>\n      <div class="tour-icons">\n        <div class="tour-content-icon">\n          <i class="far fa-map"></i>\n          <p>${e.location}</p>\n        </div>\n        <div class="tour-content-icon">\n          <i class="far fa-calendar"></i>\n          <p>June 2022</p>\n        </div>\n        <div class="tour-content-icon">\n          <i class="far fa-user"></i>\n          <p>${e.groupSize}</p>\n        </div>\n        <div class="tour-content-icon">\n          <i class="far fa-hourglass"></i>\n          <p>${e.tourLength}</p>\n        </div>\n      </div>\n    </div>\n    <div class="tour-footer">\n      <div class="tour-ratings">\n        <p class="tour-price">$${e.price} <span>per person</span></p>\n        <div class="tour-rating">${e.averageRatings} <span>rating (${e.totalRatings})</span></div>\n      </div>\n      <div class="tour-btn">\n        <a href="/tour-detail/?id=${e._id}" class="tour-link">Details</a>\n      </div>\n    </div>\n  </div>`;this.tourContainer.insertAdjacentHTML("afterbegin",t)}},w=async()=>{(await e("/api/tour","GET")).data.tours.forEach((e=>{h.generateMarkup(e)}))};(async()=>{try{(async(t,o,s,r)=>{if(a.showSpinner(),"/activate-account.html"===window.location.pathname){const t=window.location.search.split("=")[1],n=await e(`/api/user/activate-account?verify=${t}`,"GET");"success"===n.status?window.location.href="/login.html?activated=true":document.write(n.message)}else a.showSpinner();if("/login.html"===window.location.pathname&&"?activated=true"===window.location.search&&setTimeout((()=>{i.showPopup("Account verified"),i.hidePopup()}),500),"/tours.html"==window.location.pathname&&await t(),"/login.html"==window.location.pathname){const e=new n;e.loginBtn.addEventListener("click",(function(){s(e)}))}"/signup.html"==window.location.pathname&&signupView.signupbtn.addEventListener("click",o),c.getlogoutBtn()&&c.getlogoutBtn().addEventListener("click",r)})(w,m,p,g),await(async()=>{try{const t=await e("/api/user/about-me","GET");"success"===t.status&&c.updateUI(t),a.hideSpinner()}catch(e){console.log(e)}})()}catch(e){console.log(e)}})()})();